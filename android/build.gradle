buildscript {
  ext.getExtOrDefault = {name ->
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['StonePos_' + name]
  }

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:8.7.2"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${getExtOrDefault('kotlinVersion')}"
  }
}


apply plugin: "com.android.library"
apply plugin: "kotlin-android"

apply plugin: "com.facebook.react"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["StonePos_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.stonepos"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
  }

  buildFeatures {
    buildConfig true
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  sourceSets {
    main {
      java.srcDirs += [
        "generated/java",
        "generated/jni"
      ]
    }
  }
}

def stone_sdk_token = project.env.get("STONE_TOKEN")
def kotlin_version = getExtOrDefault("kotlinVersion")
def stone_sdk_version = '4.10.2'


repositories {
  maven { url "https://packagecloud.io/priv/${stone_sdk_token}/stone/pos-android/maven2" }
  maven { url "https://packagecloud.io/priv/${stone_sdk_token}/stone/pos-android-internal/maven2" }
  maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
  mavenCentral()
  google()
}


dependencies {
  implementation "com.facebook.react:react-android"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  implementation "br.com.stone:stone-sdk:$stone_sdk_version"
  implementation "br.com.stone:stone-sdk-posandroid:$stone_sdk_version"

  implementation 'com.izettle:html2bitmap:1.9'
  implementation 'com.google.zxing:core:3.4.1'

  implementation "br.com.stone:stone-sdk-posandroid-ingenico:$stone_sdk_version"
  implementation "br.com.stone:stone-sdk-posandroid-sunmi:$stone_sdk_version"
  implementation "br.com.stone:stone-sdk-posandroid-gertec:$stone_sdk_version"
  implementation "br.com.stone:stone-sdk-posandroid-positivo:$stone_sdk_version"

  debugImplementation "com.github.tony19:logback-android:2.0.0"
  debugImplementation "br.com.stone.sdk.android:debugmode:4.0.3"
}

react {
  jsRootDir = file("../src/")
  libraryName = "StonePos"
  codegenJavaPackageName = "com.stonepos"
}

def addMavenRepo(Project project, String stone_sdk_token) {
    project.repositories {
        maven { url "https://packagecloud.io/priv/${stone_sdk_token}/stone/pos-android/maven2" }
        maven { url "https://packagecloud.io/priv/${stone_sdk_token}/stone/pos-android-internal/maven2" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

gradle.projectsEvaluated {
    rootProject.allprojects.each { addMavenRepo(it, stone_sdk_token) }
}
